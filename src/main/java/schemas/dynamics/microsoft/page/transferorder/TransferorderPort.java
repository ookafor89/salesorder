package schemas.dynamics.microsoft.page.transferorder;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.3
 * 2015-10-20T14:31:10.570+01:00
 * Generated source version: 3.1.3
 * 
 */
@WebService(targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", name = "transferorder_Port")
@XmlSeeAlso({ObjectFactory.class})
public interface TransferorderPort {

    @RequestWrapper(localName = "UpdateMultiple", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.UpdateMultiple")
    @WebMethod(operationName = "UpdateMultiple", action = "urn:microsoft-dynamics-schemas/page/transferorder:UpdateMultiple")
    @ResponseWrapper(localName = "UpdateMultiple_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.UpdateMultipleResult")
    public void updateMultiple(
        @WebParam(mode = WebParam.Mode.INOUT, name = "transferorder_List", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        javax.xml.ws.Holder<TransferorderList> transferorderList
    );

    @RequestWrapper(localName = "Update", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.Update")
    @WebMethod(operationName = "Update", action = "urn:microsoft-dynamics-schemas/page/transferorder:Update")
    @ResponseWrapper(localName = "Update_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.UpdateResult")
    public void update(
        @WebParam(mode = WebParam.Mode.INOUT, name = "transferorder", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        javax.xml.ws.Holder<Transferorder> transferorder
    );

    @RequestWrapper(localName = "CreateShipmentReceipt", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateShipmentReceipt")
    @WebMethod(operationName = "CreateShipmentReceipt", action = "urn:microsoft-dynamics-schemas/page/transferorder:CreateShipmentReceipt")
    @ResponseWrapper(localName = "CreateShipmentReceipt_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateShipmentReceiptResult")
    public void createShipmentReceipt(
        @WebParam(name = "transferHeader", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String transferHeader
    );

    @WebResult(name = "transferorder", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "Read", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.Read")
    @WebMethod(operationName = "Read", action = "urn:microsoft-dynamics-schemas/page/transferorder:Read")
    @ResponseWrapper(localName = "Read_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.ReadResult")
    public schemas.dynamics.microsoft.page.transferorder.Transferorder read(
        @WebParam(name = "No", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String no
    );

    @RequestWrapper(localName = "CreateShipment", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateShipment")
    @WebMethod(operationName = "CreateShipment", action = "urn:microsoft-dynamics-schemas/page/transferorder:CreateShipment")
    @ResponseWrapper(localName = "CreateShipment_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateShipmentResult")
    public void createShipment(
        @WebParam(name = "transferHeader", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String transferHeader
    );

    @WebResult(name = "Delete_TransferLines_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "Delete_TransferLines", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.DeleteTransferLines")
    @WebMethod(operationName = "Delete_TransferLines", action = "urn:microsoft-dynamics-schemas/page/transferorder:Delete_TransferLines")
    @ResponseWrapper(localName = "Delete_TransferLines_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.DeleteTransferLinesResult")
    public boolean deleteTransferLines(
        @WebParam(name = "TransferLines_Key", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String transferLinesKey
    );

    @WebResult(name = "Delete_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "Delete", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.Delete")
    @WebMethod(operationName = "Delete", action = "urn:microsoft-dynamics-schemas/page/transferorder:Delete")
    @ResponseWrapper(localName = "Delete_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.DeleteResult")
    public boolean delete(
        @WebParam(name = "Key", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String key
    );

    @RequestWrapper(localName = "CreateMultiple", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateMultiple")
    @WebMethod(operationName = "CreateMultiple", action = "urn:microsoft-dynamics-schemas/page/transferorder:CreateMultiple")
    @ResponseWrapper(localName = "CreateMultiple_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateMultipleResult")
    public void createMultiple(
        @WebParam(mode = WebParam.Mode.INOUT, name = "transferorder_List", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        javax.xml.ws.Holder<TransferorderList> transferorderList
    );

    @WebResult(name = "ReadMultiple_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "ReadMultiple", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.ReadMultiple")
    @WebMethod(operationName = "ReadMultiple", action = "urn:microsoft-dynamics-schemas/page/transferorder:ReadMultiple")
    @ResponseWrapper(localName = "ReadMultiple_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.ReadMultipleResult")
    public schemas.dynamics.microsoft.page.transferorder.TransferorderList readMultiple(
        @WebParam(name = "filter", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.util.List<schemas.dynamics.microsoft.page.transferorder.TransferorderFilter> filter,
        @WebParam(name = "bookmarkKey", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String bookmarkKey,
        @WebParam(name = "setSize", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        int setSize
    );

    @WebResult(name = "GetRecIdFromKey_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "GetRecIdFromKey", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.GetRecIdFromKey")
    @WebMethod(operationName = "GetRecIdFromKey", action = "urn:microsoft-dynamics-schemas/page/transferorder:GetRecIdFromKey")
    @ResponseWrapper(localName = "GetRecIdFromKey_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.GetRecIdFromKeyResult")
    public java.lang.String getRecIdFromKey(
        @WebParam(name = "Key", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String key
    );

    @RequestWrapper(localName = "Create", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.Create")
    @WebMethod(operationName = "Create", action = "urn:microsoft-dynamics-schemas/page/transferorder:Create")
    @ResponseWrapper(localName = "Create_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.CreateResult")
    public void create(
        @WebParam(mode = WebParam.Mode.INOUT, name = "transferorder", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        javax.xml.ws.Holder<Transferorder> transferorder
    );

    @WebResult(name = "IsUpdated_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "IsUpdated", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.IsUpdated")
    @WebMethod(operationName = "IsUpdated", action = "urn:microsoft-dynamics-schemas/page/transferorder:IsUpdated")
    @ResponseWrapper(localName = "IsUpdated_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.IsUpdatedResult")
    public boolean isUpdated(
        @WebParam(name = "Key", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String key
    );

    @WebResult(name = "transferorder", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
    @RequestWrapper(localName = "ReadByRecId", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.ReadByRecId")
    @WebMethod(operationName = "ReadByRecId", action = "urn:microsoft-dynamics-schemas/page/transferorder:ReadByRecId")
    @ResponseWrapper(localName = "ReadByRecId_Result", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder", className = "schemas.dynamics.microsoft.page.transferorder.ReadByRecIdResult")
    public schemas.dynamics.microsoft.page.transferorder.Transferorder readByRecId(
        @WebParam(name = "recId", targetNamespace = "urn:microsoft-dynamics-schemas/page/transferorder")
        java.lang.String recId
    );
}
